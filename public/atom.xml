<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IT梦工厂</title>
  
  <subtitle>IT dreamworks</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://itdreamworks.xyz/"/>
  <updated>2018-04-14T03:14:45.764Z</updated>
  <id>https://itdreamworks.xyz/</id>
  
  <author>
    <name>itdreamworks</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Php开发环境独立安装与Yii2框架配置</title>
    <link href="https://itdreamworks.xyz/2018/04/14/MacOS%E5%86%85%E7%BD%AE%E7%9A%84PHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E7%8B%AC%E7%AB%8B%E5%AE%89%E8%A3%85)/"/>
    <id>https://itdreamworks.xyz/2018/04/14/MacOS内置的PHP开发环境(独立安装)/</id>
    <published>2018-04-14T03:10:10.000Z</published>
    <updated>2018-04-14T03:14:45.764Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二、MacOS内置的PHP开发环境（独立安装）"><a href="#二、MacOS内置的PHP开发环境（独立安装）" class="headerlink" title="二、MacOS内置的PHP开发环境（独立安装）"></a>二、MacOS内置的PHP开发环境（独立安装）</h4><h4 id="2-1、运行Apache"><a href="#2-1、运行Apache" class="headerlink" title="2.1、运行Apache"></a><strong>2.1、运行Apache</strong></h4><blockquote><p>好了，该进入正文了。先来看看装备的耐草指数吧：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/macprosystem.png" alt="MackBookPro系统参数："></p><p>这里主要是想说明，系统配置的差异，会对电脑自带的环境及参数有差异，但对我们的开发和后面的环境搭建和配置基本是没什么影响的。要感谢公司哈，好好准备物尽其用吧～。</p><p>首先，我们可以先打开终端，至于Mac怎么打开终端还不熟悉的童鞋，请自行百度哦。由于MacOS中已经内置了PHP，Python，Ruby等常用的脚本语言，以及ApacheHTTP服务器，我们可以通过终端输入以下命令来查看（既然有内置的，我们也来用用呗，没有比较就没有选择嘛）:  <img src="http://p1nd11vo8.bkt.clouddn.com/check_version.png" alt="查看内置的php+apache版本"></p><p><a href="https://blog.csdn.net/tanga842428/article/details/70193835" target="_blank" rel="noopener">mac终端普通用户切换root用户</a></p><p>xxx is not in the sudoers file.This incident will be reported.的解决方法:</p><p><a href="https://www.aliyun.com/jiaocheng/185436.html" target="_blank" rel="noopener">xxx is not in the sudoers file的解决办法</a></p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/root_pwd.png" alt="mac终端普通用户切换root"></p><p><img src="http://p1nd11vo8.bkt.clouddn.com/user_sudo.png" alt="普通用户切换成root"></p><blockquote><p>su - 用户名 (-和用户名之间有英文半角空格) 切换回普通用户，eg.  <strong>su - itworks</strong> （这里itworks换成你们自己的用户名）    <a href="https://blog.csdn.net/cgema/article/details/72457985" target="_blank" rel="noopener">Mac下快速搭建PHP开发环境</a></p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/apache_start.png" alt="开启apache并测试"></p><blockquote><p>常用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo apachectl -v查看Apache版本</span><br><span class="line">&gt; sudo apachectl start开启Apache</span><br><span class="line">&gt; sudo apachectl stop关闭Apache</span><br><span class="line">&gt; sudo apachectl restart重启Apache</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="2-2、配置PHP"><a href="#2-2、配置PHP" class="headerlink" title="2.2、配置PHP"></a>2.2、配置PHP</h4><p><img src="http://p1nd11vo8.bkt.clouddn.com/config_php7.png" alt="配置php7"></p><p>编辑Apache的配置文件，终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/apache2/httpd.conf</span><br></pre></td></tr></table></figure><p>找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#LoadModule php7_module libexec/apache2/libphp7.so</span><br></pre></td></tr></table></figure><p>去掉前面的“#”号注释，然后 :wq 保存退出即可</p><p>复制一份php.ini.default并将其命名为php.ini即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/php.ini.default /etc/php.ini</span><br></pre></td></tr></table></figure><p>重启Apache，使其生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl restart</span><br></pre></td></tr></table></figure><p>测试apache与php之间的通信：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/apache_php.png" alt="apache与php通信"></p><p>没问题了以后，就可以在这里写写测试Demo了^_^</p><h4 id="2-3、安装并运行MySQL"><a href="#2-3、安装并运行MySQL" class="headerlink" title="2.3、安装并运行MySQL"></a>2.3、安装并运行MySQL</h4><p>下载MySQL：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL官网</a>   下载后双击安装，成功之后，会弹出提示框：</p><blockquote><p>MySQL: 2018-04-03T08:30:17.852818Z 1  [<strong>Note</strong>] <strong>A temporary password is generated for root@localhost: ?B</strong>(<strong>dL+ge</strong>)<strong>1Je</strong>   <strong><em>注：localhost冒号后面的就是 MySQL临时登录密码）</em></strong></p><p>If you lose this password<strong>, </strong>please consult the section How to Reset the Root Password in the MySQL reference manual.**</p><p>从弹窗中Copy记住这个密码，并保存起来，以备初次登录使用。</p></blockquote><p><a href="https://www.jianshu.com/p/fd3aae701db9" target="_blank" rel="noopener">mac安装mysql的两种方法（含配置）</a>  </p><p>启动MySQL使之处于running状态：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/local_mysql.png" alt="启动MySQL"> </p><p>mac下mysql terminal命令行设置以及常规用法：</p><blockquote><p>首先正常使用时，需要找到MySQL所在bin目录，例如：</p><ol><li><p>$ /usr/local/mysql/bin/mysql -u root -p  </p></li><li><p>Enter password:   </p></li><li><p>通过mysql -uroot -p登录mysql, 输入之前保存的密码，然后重置mysql初始密码 </p><p>（PS: 我个人觉得这应该是最简单方便的修改MySQL初始密码的方式了）</p><p>原理是修改database：mysql 的table：user 中的User字段为root的密码，5.7版本的mysql的密码字段是authentication_string，低版本的叫password;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;    SET PASSWORD FOR &apos;root&apos;@&apos;localhost&apos; = PASSWORD(&apos;newpassword&apos;);  </span><br><span class="line">&gt;    刷新权限，退出重启：</span><br><span class="line">&gt;    MySQL&gt; flush privileges;</span><br><span class="line">&gt;    MySQL&gt; quit;</span><br><span class="line">&gt;    终端：service mysql start</span><br><span class="line">&gt;    密码修改完成</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><p>至于像网上所说的 <a href="https://blog.csdn.net/pariese/article/details/77527813" target="_blank" rel="noopener">mac下修改mysql的密码</a> 的各种方式，我暂时还没有一一试过。所涉及的</p><blockquote><p>vim ~/.bash_profile      我当前的it_works用户下并没有该文件，可以使用</p><p><strong>find / -name .bash_profile</strong>    命令查找，发现是在管理员用户目录下：</p><p>/Users/zhaozhangli/.bash_profile</p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/mysql_login.png" alt="MySQL第一次登录"></p><p>这里可以使用SQL:  mysql&gt; select version();  查看版本号</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/modify_pwd.png" alt="修改初始密码">   </p><p><a href="http://p1nd11vo8.bkt.clouddn.com/apache_start.png" target="_blank" rel="noopener">mac下mysql terminal命令行设置以及常规用法</a>  </p><p>注意：Automatically Start MySQL Server On Startup是默认勾选的，勾选后打开电脑会默认开启MySQL，建议不需要的可以不用默认勾选。至于这里为什么独立安装一个相对新版的MySQL 5.7.21，当然是为了体验新版本所带来的新技术和新特性了。这里想尝鲜或者想当第一个吃螃蟹的小伙伴，可以先看下这个友情链接：</p><p><a href="http://www.cnblogs.com/nulige/articles/6880535.html" target="_blank" rel="noopener">MySQL 5.7 新特性大全和未来展望</a></p><p>嫌终端查看数据库不方便的，可以下载Navicat Lite管理软件，管理MySQL超级方便。后面的教程会再详细介绍。</p><p>至此，利用MacOS系统内置的Apache+MySQL+PHP的独立开发环境已经安装完毕，暂告一段落了！</p><h5 id="下一篇：MAMP集成环境使用与Yii2框架配置"><a href="#下一篇：MAMP集成环境使用与Yii2框架配置" class="headerlink" title="下一篇：MAMP集成环境使用与Yii2框架配置"></a>下一篇：MAMP集成环境使用与Yii2框架配置</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二、MacOS内置的PHP开发环境（独立安装）&quot;&gt;&lt;a href=&quot;#二、MacOS内置的PHP开发环境（独立安装）&quot; class=&quot;headerlink&quot; title=&quot;二、MacOS内置的PHP开发环境（独立安装）&quot;&gt;&lt;/a&gt;二、MacOS内置的PHP开发环境
      
    
    </summary>
    
    
      <category term="MacOS Unix Apache Php MySQL Yii2" scheme="https://itdreamworks.xyz/tags/MacOS-Unix-Apache-Php-MySQL-Yii2/"/>
    
  </entry>
  
  <entry>
    <title>MAMP集成环境使用与Yii2框架配置</title>
    <link href="https://itdreamworks.xyz/2018/04/14/MAMP%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E4%B8%8EYii2%E6%A1%86%E6%9E%B6%E9%85%8D%E7%BD%AE/"/>
    <id>https://itdreamworks.xyz/2018/04/14/MAMP集成环境使用与Yii2框架配置/</id>
    <published>2018-04-14T02:43:50.000Z</published>
    <updated>2018-04-14T03:12:17.624Z</updated>
    
    <content type="html"><![CDATA[<h4 id="三、MAMP集成环境使用与Yii2框架配置"><a href="#三、MAMP集成环境使用与Yii2框架配置" class="headerlink" title="三、MAMP集成环境使用与Yii2框架配置"></a>三、MAMP集成环境使用与Yii2框架配置</h4><blockquote><p>继上章节MacOS内置的PHP开发环境（独立安装）完成之后，这里将来大招了，安装集成环境MAMP。</p><p>安装MAMP之后，你会发现，上面你所做的事情，基本上都是多余的，因为这个一装完，其它基本都不需要动了，除了稍微改改配置什么的。<a href="https://www.mamp.info/en/" target="_blank" rel="noopener">MAMP安装地址</a>   安装FREE免费版的就够了</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/mamp_play.gif" alt="mamp使用演示"></p><p>通过Preferences设置可以设置项目是用的是Apache还是Nginx，可以设置端口号，也可以设置是用PHP的版本号，然后可以将文件夹指向自己的项目，如果没有就新建一个，最后只需要点一下start即可。这样，一个完整的PHP环境就搭建好了！ （注： Nginx的还用不起来，如有熟知的，还望告知一下啊。）</p></blockquote><p>参考链接：<a href="https://www.jianshu.com/p/d58a84a42ea8" target="_blank" rel="noopener">mac环境下利用MAMP配置PHPStorm</a></p><h5 id="3-1-YII2简介"><a href="#3-1-YII2简介" class="headerlink" title="3.1 YII2简介"></a>3.1 YII2简介</h5><p>环境好了，接下来是不是得体验用一下，这里我们结合Yii2框架，因为工作中要用到，于是乎先来简单了解一下Yii2。官网在这里： <a href="https://www.yiiframework.com/" target="_blank" rel="noopener">yiiframework</a> 英文好的小伙伴，请直接阅读吧。这里我也简单附上我所查阅了解的：</p><blockquote><h5 id="YII简介"><a href="#YII简介" class="headerlink" title="YII简介"></a>YII简介</h5><p>Yii 是一个高性能，基于组件的 PHP 框架，用于快速开发现代 Web 应用程序。</p><h5 id="YII优点"><a href="#YII优点" class="headerlink" title="YII优点"></a>YII优点</h5><ul><li><p>和其他 PHP 框架类似，Yii 实现了 MVC（Model-View-Controller）设计模式并基于该模式组织代码。</p></li><li><p>Yii 的代码简洁优雅，这是 Yii 的编程哲学。它永远不会为了要迎合某个设计模式而对代码进行过度的设计。</p></li><li><p>Yii 是一个全栈框架，提供了大量久经考验，开箱即用的特性，例如：对关系型和 NoSQL 数据库都提供了查询生成器（QueryBuilders）和 ActiveRecord；RESTful API 的开发支持；多层缓存支持，等等。</p></li><li><p>Yii 非常易于扩展。你可以自定义或替换几乎任何一处核心代码。你还会受益于它坚实可靠的扩展架构，使用、再开发或再发布扩展。</p></li><li><p>高性能始终是 Yii 的首要目标之一。</p><h5 id="Yii-版本"><a href="#Yii-版本" class="headerlink" title="Yii 版本"></a>Yii 版本</h5><p>Yii2的最新版本是 <strong>2.0.15</strong>，发布于 <strong>2018年03月20日</strong>。Yii 2.0 在 PHP 5.4.0 版本以上完全重写了 Yii，并且完全兼容 PHP 7.x。它的目的是成为一个最先进的新一代的PHP开发框架。Yii2.0不兼容1.1。2.0 版是一个完全重写的版本，采用了最新的技术和协议，包括依赖包管理器（Composer）、PHP 代码规范（PSR）、命名空间、Traits（特质）等等。 2.0 版代表了最新一代框架，是未来几年中我们的主要开发版本。所以，我们学习2.0版本。</p></li></ul></blockquote><h5 id="3-2-安装YII2"><a href="#3-2-安装YII2" class="headerlink" title="3.2 安装YII2"></a>3.2 安装YII2</h5><h5 id="1、使用composer安装"><a href="#1、使用composer安装" class="headerlink" title="1、使用composer安装"></a>1、使用composer安装</h5><blockquote><p><a href="http://docs.phpcomposer.com/00-intro.html" target="_blank" rel="noopener">什么是Composer？</a> 由于高墙的原因，会下载很慢，所以，这里我们使用<a href="http://pkg.phpcomposer.com/#tip1" target="_blank" rel="noopener">Composer中国镜像</a>。</p></blockquote><h5 id="如何安装-Composer"><a href="#如何安装-Composer" class="headerlink" title="如何安装 Composer ?"></a>如何安装 Composer ?</h5><blockquote><p>启用本镜像服务，系统全局配置： 即将配置信息添加到 Composer 的全局配置文件 config.json 中。修改 composer 的全局配置文件<strong>（推荐方式）</strong>  打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><h5 id="下载-Composer"><a href="#下载-Composer" class="headerlink" title="下载 Composer"></a>下载 Composer</h5><blockquote><p>安装前请务必确保已经正确安装了 <a href="http://php.net/" target="_blank" rel="noopener">PHP</a>。打开命令行窗口并执行 <code>php -v</code> 查看是否正确输出版本号。</p></blockquote><p>打开命令行并依次执行下列命令安装最新版本的 Composer：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &quot;copy(&apos;https://install.phpcomposer.com/installer&apos;, &apos;composer-setup.php&apos;);&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php composer-setup.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</span><br></pre></td></tr></table></figure><blockquote><p>执行第一条命令下载下来的 <code>composer-setup.php</code> 脚本将简单地检测 <code>php.ini</code> 中的参数设置，如果某些参数未正确设置则会给出警告；然后下载最新版本的 <code>composer.phar</code> 文件到当前目录。</p><p>上述 3 条命令的作用依次是：</p><ol><li>下载安装脚本 － <code>composer-setup.php</code> － 到当前目录。</li><li>执行安装过程。</li><li>删除安装脚本。</li></ol></blockquote><p>这里推荐使用全局安装：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/Composer.png" alt="Composer全局安装"></p><blockquote><p>命令：sudo mv composer.phar /usr/local/bin/composer</p><p>然后，重新打开一个命令行窗口试一试执行 <code>composer --version</code> 看看是否正确输出版本号。</p><p>最后，提示：不要忘了经常执行 <code>composer selfupdate</code> 以保持 Composer 一直是最新版本哦！</p></blockquote><h5 id="2、安装composer-asset-plugin插件"><a href="#2、安装composer-asset-plugin插件" class="headerlink" title="2、安装composer-asset-plugin插件"></a>2、安装composer-asset-plugin插件</h5><blockquote><p>局部安装：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php composer.phar global require &quot;fxp/composer-asset-plugin:~1.2.0&quot;</span><br></pre></td></tr></table></figure><blockquote><p>如果你的Composer是全局安装的，那么就不需要输入<code>php composer.phar</code>，只需要用<code>composer</code>命令即可。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer global require &quot;fxp/composer-asset-plugin:~1.2.0&quot;</span><br></pre></td></tr></table></figure><blockquote><p>安装这个，不然你会发现新增加好的项目中没有vendor目录</p></blockquote><h5 id="3、下载yii"><a href="#3、下载yii" class="headerlink" title="3、下载yii"></a>3、下载yii</h5><blockquote><p>局部安装：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php composer.phar create-project --prefer-dist yiisoft/yii2-app-advanced advanced</span><br></pre></td></tr></table></figure><blockquote><p>全局安装方法：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist yiisoft/yii2-app-advanced advanced 2.0.15</span><br></pre></td></tr></table></figure><blockquote><p>请注意，您可能会被提示安装过程中输入你的 GitHub 的用户名和密码。这是正常的。需要授权拉取的，只要输入它们并继续。</p></blockquote><p>参考链接：<a href="http://www.yiichina.com/download" target="_blank" rel="noopener">Yii 中文网下载</a>   教程： <a href="https://segmentfault.com/a/1190000007976022" target="_blank" rel="noopener">YII2快速学习笔记</a></p><blockquote><p>在安装composer-asset-plugin的过程中，可能是由于网络的原因（明天接着安装吧。。。）：</p><p>[Composer\Downloader\TransportException]                                   </p><p>Content-Length mismatch, received 293497 bytes out of the expected 938084</p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/composer-asset-plugin.png" alt="asset-plugin没安装成功"></p><p>一阵时间后，都不约而同地出现了红色异常提示：</p><blockquote><p>[Composer\Downloader\TransportException]                                   </p><p> Content-Length mismatch, received 293497 bytes out of the expected 938084</p></blockquote><p>可能是网络问题吧，第二天早上就可以顺利下载了</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/yii2_install.png" alt="Yii2下载"></p><blockquote><p>输入这个链接，在浏览器中打开，需要登录到自己的Github账户：</p><p><a href="https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225" target="_blank" rel="noopener">https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225</a></p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/access_token.png" alt="access_token"></p><p>使用默认钩选即可，然后点击绿色的 Generate token ! </p><p><img src="http://p1nd11vo8.bkt.clouddn.com/personal_access.png" alt="personal access"></p><p><strong><em>这里一定要注意及时把这个刚生成的 access tokens 拷贝到终端命令行 Token (hidden): 处，否则，当前页面会话期一过的话或者刷新页面后，就可能再也看不到了，就得重新再创建过了。</em></strong></p><p>获取到Token授权之后，复制粘贴到这里：</p><blockquote><p>Head to <a href="https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225" target="_blank" rel="noopener">https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225</a>   (注：点此链接去创建Token)</p><p>to retrieve a token. It will be stored in “/Users/itworks/.composer/auth.json” for future use by Composer.</p><p>Token (hidden):  <strong>(注意这里是从Github获取到的授权Token)</strong></p><p>Token stored successfully.</p><p>Package operations: 63 installs, 0 updates, 0 removals     </p><ul><li><p>Installing yiisoft/yii2-composer (2.0.6): Downloading (100%)         </p></li><li><p>Installing doctrine/lexer (v1.0.1): Downloading (100%)         </p></li><li><p>Installing egulias/email-validator (2.1.4): Downloading (100%) </p></li></ul></blockquote><p>前面的操作，会因网络情况，而出现不同的等待情况，输入完Token后，请务必耐心等待！！</p><h5 id="4、下载好YII后，初始化操作"><a href="#4、下载好YII后，初始化操作" class="headerlink" title="4、下载好YII后，初始化操作"></a>4、下载好YII后，初始化操作</h5><p>如果你是类linux系统，切换到advanced目录执行php init命令进行初始化，如果你是windows系统，请双击advanced目录下的init.bat文件</p><blockquote><p>php init</p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/yii_init.png" alt="yii init"></p><h4 id="5、-服务器配置"><a href="#5、-服务器配置" class="headerlink" title="5、 服务器配置"></a>5、 服务器配置</h4><h5 id="1）更改hosts文件内容"><a href="#1）更改hosts文件内容" class="headerlink" title="1）更改hosts文件内容"></a>1）更改hosts文件内容</h5><blockquote><p>命令： sudo vim /etc/hosts</p><p>添加：127.0.0.1       yiiwork.com</p></blockquote><h5 id="2）更改apache服务器配置"><a href="#2）更改apache服务器配置" class="headerlink" title="2）更改apache服务器配置"></a>2）更改apache服务器配置</h5><blockquote><p><a href="https://blog.csdn.net/it_r00t/article/details/75254933" target="_blank" rel="noopener">MAMP配置虚拟主机</a> </p><p><strong>一：打开终端（Terminal）或Iterm工具，首先用命令</strong></p><blockquote><p>sudo vim /Applications/MAMP/conf/apache/httpd.conf </p><p>打开Apache的配置文件找到</p></blockquote><p><strong>#Include /Applications/MAMP/conf/apache/extra/httpd-vhosts.conf 取消注释，使配置虚拟主机的文件生效</strong></p><p><strong>二：打开虚拟主机配置文件：</strong></p><p>命令：sudo vim /Applications/MAMP/conf/apache/extra/httpd-vhosts.conf</p><p>在其中加入如下配置</p><virtualhost *:80=""><br><br>​    ServerAdmin lizhaozhang@xxx.im<br><br>​    DocumentRoot “/Users/itworks/advanced/frontend/web”<br><br>​    ServerName yiiwork.com<br><br>​    ServerAlias yiiwork.com<br><br>​    ErrorLog “logs/dummy-host.example.com-error_log”<br><br>​    CustomLog “logs/dummy-host.example.com-access_log” common<br><br>​    <directory "="" users="" itworks="" advanced="" frontend="" web"=""><br><br>​            Options Indexes FollowSymLinks MultiViews<br><br>​            AllowOverride None<br><br>​          #  Require all granted<br><br>​    </directory><br><br></virtualhost><h5 id="三、修改项目目录访问权限"><a href="#三、修改项目目录访问权限" class="headerlink" title="三、修改项目目录访问权限"></a>三、修改项目目录访问权限</h5><p>命令： sudo chmod -R 777 /Users/itworks/advanced/</p><h5 id="四、更改完成后需要重启Apache服务器"><a href="#四、更改完成后需要重启Apache服务器" class="headerlink" title="四、更改完成后需要重启Apache服务器"></a>四、更改完成后需要重启Apache服务器</h5><p>配置完成后打开浏览器，输入配置的本地域名：<a href="http://yiiwork.com/" target="_blank" rel="noopener">http://yiiwork.com/</a>   访问，成功了^_^</p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/yiiwork.png" alt="yiiwork显示"></p><p><strong><em>Note:  期间遇到的一个问题，在先把MAMP Start Servers, 会弹窗报错：</em></strong></p><blockquote><p>Apache couldn’t be started. Please check your MAMP installation and configuration. </p><p>这是因为我们设置的MAMP的Apache的端口也是80，MySQL使用的默认端口也是3306，</p><p>我们用命令查看一下它们的端口和进程的占用情况：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -i:80查看80端口的占用情况    ps aux | grep apache 查看进程</span><br><span class="line">sudo lsof -i:3306查看3306端口的占用情况  ps aux | grep mysqld 查看MySQL进程</span><br><span class="line">kill -9 PID kill -9 pid &lt;==&gt; kill -s 9 pid，表示强制，尽快终止一个进程。</span><br><span class="line">多半admin会用这个命令。</span><br></pre></td></tr></table></figure><blockquote><p>我们先把前面独立安装的MySQL和Apache给停了，然后再看端口的占用情况</p><p>MySQL： 直接点击Stop MySQL Server</p><p>Apache：sudo apachectl stop</p></blockquote><p>但依旧未能正常启动MAMP中的MySQL服务，于是就</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/port_process.png" alt="查看端口和进程情况"></p><blockquote><p>没办法，只能去MAMP的MySQL运行日志中去寻找原因了</p></blockquote><p><img src="http://p1nd11vo8.bkt.clouddn.com/mysql_start.png" alt="mamp MySQL启动不了"></p><p>如果能够正常启动成功，会出现以下界面，并可以通过界面查看PHP安装环境及MySQL</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/mamp_start_server.png" alt="PHP安装环境及连接MySQL"></p><p><strong>因此，无论是在环境安装，还是在项目环境配置过程中，遇到问题，要学会去查看服务器和数据库的运行日志，从日志中发现问题，解决问题！！</strong></p><blockquote><p>附MAMP的服务器软件安装目录，MAMP Logs路径：/Applications/MAMP/logs   下有</p><p>apache_error.log    cloud_mamp.log    mysql_error_log.err    nginx_access.log    nginx_error.log</p><p>环境软件路径：</p><p>cd /Applications/MAMP/Library/bin</p></blockquote><p>由于本人本地项目环境，采用的是 Homebrew（即Nginx+Php+MySQL）, 以及PhpStorm和Git版本管理，因此，这里就不再对MAMP环境过多深入的篇幅，感兴趣的童靴，可以自行研究，或者私下交流。</p><h5 id="下一篇：-Homebrew集成环境-PhpStorm与Yii2的最佳实践"><a href="#下一篇：-Homebrew集成环境-PhpStorm与Yii2的最佳实践" class="headerlink" title="下一篇： Homebrew集成环境+PhpStorm与Yii2的最佳实践"></a>下一篇： Homebrew集成环境+PhpStorm与Yii2的最佳实践</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;三、MAMP集成环境使用与Yii2框架配置&quot;&gt;&lt;a href=&quot;#三、MAMP集成环境使用与Yii2框架配置&quot; class=&quot;headerlink&quot; title=&quot;三、MAMP集成环境使用与Yii2框架配置&quot;&gt;&lt;/a&gt;三、MAMP集成环境使用与Yii2框架配置&lt;/
      
    
    </summary>
    
    
      <category term="MacOS Unix MAMP Yii2" scheme="https://itdreamworks.xyz/tags/MacOS-Unix-MAMP-Yii2/"/>
    
  </entry>
  
  <entry>
    <title>MacOS使用背景前言</title>
    <link href="https://itdreamworks.xyz/2018/04/13/MacOS%E4%BD%BF%E7%94%A8%E8%83%8C%E6%99%AF%E5%89%8D%E8%A8%80/"/>
    <id>https://itdreamworks.xyz/2018/04/13/MacOS使用背景前言/</id>
    <published>2018-04-13T15:43:50.000Z</published>
    <updated>2018-04-14T03:21:35.840Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MacOS下PHP开发环境的搭建"><a href="#MacOS下PHP开发环境的搭建" class="headerlink" title="MacOS下PHP开发环境的搭建"></a>MacOS下PHP开发环境的搭建</h3><p>MacOS：macOS High Sierra 版本10.13.4(17E199)</p><p>Apache：Server version: Apache/2.4.29 (Unix)</p><p>Nginx:    nginx version: nginx/1.13.10</p><p>PHP：PHP 7.1.14 (cli) (built: Feb  7 2018 18:33:30) ( NTS )</p><h4 id="一、MacOS使用背景前言"><a href="#一、MacOS使用背景前言" class="headerlink" title="一、MacOS使用背景前言"></a>一、MacOS使用背景前言</h4><blockquote><p>距自己再次使用Mac电脑，已经过去整整一年半了，说来不免都有些生疏了。对于很多习惯了基于Win PC学习办公、或者高度依赖于相对单一的高级IDE的程序猿（媛）们，如前端、手机端（Android/IOS）等，可能鲜有机会或需要去全面接触众多工具软件或者CLI（command-line interface，命令行界面）。本人之前更多的也是手机端的工作经验，想当时刚接触MacOS时，也是会有短暂的不适，但对于新鲜而又好用的新工具，作为程序猿（媛）的我们，没理由去排斥它，而应该是挑战自己的舒适区，以最快的速度擅加使用它们。    </p><p>限于文章的篇幅，以及本文的侧重是如何在Mac下搭建PHP的开发环境，所以这里就不一一介绍MacOS系统及其使用了。对于Mac小白用户，请移步这里： <a href="https://bbs.feng.com/read-htm-tid-11190856.html" title="写给Mac新手的入门教程" target="_blank" rel="noopener"><strong>从Win PC到Mac</strong> </a>   和  <a href="https://www.zhihu.com/question/33887923" target="_blank" rel="noopener"><strong>Mac 电脑小白应该了解哪些东西</strong></a> 。相信拥有上佳学习能力的你们，会很快熟悉并打造自己喜欢的Style，你们会喜欢上它的。</p><p>对于刚准备上手MacOSX的童靴，当你刚拿到公司给你配置的MackBookPro后，你新建的第一个用户，一般是管理员用户。而管理员用户是拥有较高的权限的，在我们使用CLI玩转各种命令的时候，不可避免地要涉及到<strong>用户（User）</strong>和<strong>用户组（Group）</strong>，以及对应的各权限问题。为保证能够在相对安全的情况下，对系统进行一些比较安全的命令操作，<strong><u>这里建议除了系统管理员用户外，再新建一个普通成员用户。</u></strong>  详细请看这里： <strong><a href="https://jingyan.baidu.com/article/dca1fa6f17e759f1a5405263.html" target="_blank" rel="noopener">MacBook Pro用户与群组如何设置</a></strong>  这类用户能登录系统，但只能操作自己家目录的内容，权限有限，这类用户都是系统管理员自行添加的。举一个「血淋淋的例子」：本人刚拿到这个本子时，就一股劲的装PHP开发环境啊，配置项目运行权限啊等，正在用有限的生命，在做无限的权限斗争时，可能是由于不小心改了用户id或是群组，结果导致出现了这个足以令人崩溃的问题 ：<img src="http://p1nd11vo8.bkt.clouddn.com/modify.jpg" alt="“OS X”需要修复您的资源库才能运行应用程序">   </p><p>而后在尝试想恢复出厂设置或重装系统的时候，又出现了：<img src="http://p1nd11vo8.bkt.clouddn.com/OSX.jpg" alt="黑屏出现白色斜杠"></p><p>重启多次后发现也救不了我的本子，本「宝宝」的心情很不美丽：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/crash.jpg" alt="本宝宝的内心几乎是崩溃的"></p><p>至于是怎么满血复活的，重装系统啊，对于MacOSX系统遇到类似的问题是如何重装系统的，感兴趣的小伙伴且听我下回分解，在此先不做详述了。</p><p>“<strong>Unix系统通过进程的有效用户ID和有效用户组ID来决定进程对系统资源的访问权限。</strong>” 而我可能是在系统管理员权限下，修改了系统管理员的用户id或是群组，当然也包括对有些命令不够熟悉的情况下的操作，这本身就是个高风险的，可能会带来包括文件路径及权限等一系列问题。就好比如你一直用一个手机号在各大网络平台注册用户，突然哪天你把手机号换了，那各大平台就不能再给你提供理想的服务了，比如短信校验等。因此建议对Linux命令操作感兴趣的小伙伴，如安装 <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">Virtual Box</a>或者<a href="http://www.vmware.com/" target="_blank" rel="noopener">VMWare</a> 搭建个Linux环境慢慢去玩去折腾，等搞清楚各个命令行的用处后，在自己的本子上，或者以后在生产环境中使用就相对安全了。当然在生产环境上的操作，不懂最好联系运维或管理员，不要自己瞎折腾，不然就会出事故的。这里对Linux感兴趣，想系统修炼的童鞋可以看看：</p><h5 id="linux常用基本命令-（PS：满足短期内工作和学习要求）"><a href="#linux常用基本命令-（PS：满足短期内工作和学习要求）" class="headerlink" title="linux常用基本命令   （PS：满足短期内工作和学习要求）"></a><a href="https://www.cnblogs.com/crazylqy/p/5818745.html" target="_blank" rel="noopener">linux常用基本命令</a>   （PS：满足短期内工作和学习要求）</h5><p><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php" target="_blank" rel="noopener">鸟哥官网（简体中文）</a>  </p><p><a href="https://blog.csdn.net/freeking101/article/details/78201539" target="_blank" rel="noopener">linux用户和用户组管理(添加、删除、修改)及说明</a> </p><p><a href="http://www.cnblogs.com/licheng/p/6104080.html" target="_blank" rel="noopener">用户管理 之 用户（User）和用户组（Group）配置文件详解</a></p><p>Unix和Linux以及其它类Unix系统正是通过这样的用户及权限管理机制，来保障多用户操作系统管理更为方便、安全和稳定。</p></blockquote><p>本系列教程将遵循在保证干货量的同时，由浅入深，由易至难的梯度以及适度地拓展延升，并坚持有图有真相的实践结果为证，以期能够满足不同经验和技术背景的童靴，不同的求知需求。为了保持轻松愉悦的学习兴头，先来张有点违和感和年代感的「小黄图」，缓解一下严肃的氛围：</p><p><img src="http://p1nd11vo8.bkt.clouddn.com/curiosity.jpg" alt="好奇地围观"></p><p>（PS: 想我年轻的时候，也在好奇地围观，逃～）</p><h5 id="下一篇：MacOS内置的PHP开发环境（独立安装）"><a href="#下一篇：MacOS内置的PHP开发环境（独立安装）" class="headerlink" title="下一篇：MacOS内置的PHP开发环境（独立安装）"></a><strong>下一篇：MacOS内置的PHP开发环境（独立安装）</strong></h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;MacOS下PHP开发环境的搭建&quot;&gt;&lt;a href=&quot;#MacOS下PHP开发环境的搭建&quot; class=&quot;headerlink&quot; title=&quot;MacOS下PHP开发环境的搭建&quot;&gt;&lt;/a&gt;MacOS下PHP开发环境的搭建&lt;/h3&gt;&lt;p&gt;MacOS：macOS Hi
      
    
    </summary>
    
    
      <category term="MacOS Unix Mac系统重装 用户、群组与权限" scheme="https://itdreamworks.xyz/tags/MacOS-Unix-Mac%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85-%E7%94%A8%E6%88%B7%E3%80%81%E7%BE%A4%E7%BB%84%E4%B8%8E%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>程序员的第一个网站</title>
    <link href="https://itdreamworks.xyz/2018/03/09/hello-world/"/>
    <id>https://itdreamworks.xyz/2018/03/09/hello-world/</id>
    <published>2018-03-09T09:08:37.519Z</published>
    <updated>2018-03-09T09:08:37.519Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://itdreamworks.xyz/">IT Dream Works</a>! This is your very first post. Check <a href="https://itdreamworks.xyz/">documentation</a> for more info. If you get any problems when using IT Dream Works, you can find the answer in <a href="https://itdreamworks.xyz/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/lzzitdreamworks/" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ itdreamworks new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://itdreamworks.xyz/">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ itdreamworks server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://itdreamworks.xyz/">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ itdreamworks generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://itdreamworks.xyz/">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ itdreamworks deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://itdreamworks.xyz/">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://itdreamworks.xyz/&quot;&gt;IT Dream Works&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://itdreamworks.xyz/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test_my_site</title>
    <link href="https://itdreamworks.xyz/2018/02/08/test-my-site/"/>
    <id>https://itdreamworks.xyz/2018/02/08/test-my-site/</id>
    <published>2018-02-08T10:03:50.000Z</published>
    <updated>2018-02-08T10:03:50.423Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
