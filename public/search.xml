<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Php开发环境独立安装与Yii2框架配置]]></title>
    <url>%2F2018%2F04%2F14%2FMacOS%E5%86%85%E7%BD%AE%E7%9A%84PHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83(%E7%8B%AC%E7%AB%8B%E5%AE%89%E8%A3%85)%2F</url>
    <content type="text"><![CDATA[二、MacOS内置的PHP开发环境（独立安装）2.1、运行Apache 好了，该进入正文了。先来看看装备的耐草指数吧： 这里主要是想说明，系统配置的差异，会对电脑自带的环境及参数有差异，但对我们的开发和后面的环境搭建和配置基本是没什么影响的。要感谢公司哈，好好准备物尽其用吧～。 首先，我们可以先打开终端，至于Mac怎么打开终端还不熟悉的童鞋，请自行百度哦。由于MacOS中已经内置了PHP，Python，Ruby等常用的脚本语言，以及ApacheHTTP服务器，我们可以通过终端输入以下命令来查看（既然有内置的，我们也来用用呗，没有比较就没有选择嘛）: mac终端普通用户切换root用户 xxx is not in the sudoers file.This incident will be reported.的解决方法: xxx is not in the sudoers file的解决办法 su - 用户名 (-和用户名之间有英文半角空格) 切换回普通用户，eg. su - itworks （这里itworks换成你们自己的用户名） Mac下快速搭建PHP开发环境 常用命令： 12345&gt; sudo apachectl -v 查看Apache版本&gt; sudo apachectl start 开启Apache&gt; sudo apachectl stop 关闭Apache&gt; sudo apachectl restart 重启Apache&gt; 2.2、配置PHP 编辑Apache的配置文件，终端输入： 1sudo vi /etc/apache2/httpd.conf 找到： 1#LoadModule php7_module libexec/apache2/libphp7.so 去掉前面的“#”号注释，然后 :wq 保存退出即可 复制一份php.ini.default并将其命名为php.ini即可 1sudo cp /etc/php.ini.default /etc/php.ini 重启Apache，使其生效 1sudo apachectl restart 测试apache与php之间的通信： 没问题了以后，就可以在这里写写测试Demo了^_^ 2.3、安装并运行MySQL下载MySQL：MySQL官网 下载后双击安装，成功之后，会弹出提示框： MySQL: 2018-04-03T08:30:17.852818Z 1 [Note] A temporary password is generated for root@localhost: ?B(dL+ge)1Je 注：localhost冒号后面的就是 MySQL临时登录密码） If you lose this password, please consult the section How to Reset the Root Password in the MySQL reference manual.** 从弹窗中Copy记住这个密码，并保存起来，以备初次登录使用。 mac安装mysql的两种方法（含配置） 启动MySQL使之处于running状态： mac下mysql terminal命令行设置以及常规用法： 首先正常使用时，需要找到MySQL所在bin目录，例如： $ /usr/local/mysql/bin/mysql -u root -p Enter password: 通过mysql -uroot -p登录mysql, 输入之前保存的密码，然后重置mysql初始密码 （PS: 我个人觉得这应该是最简单方便的修改MySQL初始密码的方式了） 原理是修改database：mysql 的table：user 中的User字段为root的密码，5.7版本的mysql的密码字段是authentication_string，低版本的叫password; 1234567&gt; SET PASSWORD FOR &apos;root&apos;@&apos;localhost&apos; = PASSWORD(&apos;newpassword&apos;); &gt; 刷新权限，退出重启：&gt; MySQL&gt; flush privileges;&gt; MySQL&gt; quit;&gt; 终端：service mysql start&gt; 密码修改完成&gt; 至于像网上所说的 mac下修改mysql的密码 的各种方式，我暂时还没有一一试过。所涉及的 vim ~/.bash_profile 我当前的it_works用户下并没有该文件，可以使用 find / -name .bash_profile 命令查找，发现是在管理员用户目录下： /Users/zhaozhangli/.bash_profile 这里可以使用SQL: mysql&gt; select version(); 查看版本号 mac下mysql terminal命令行设置以及常规用法 注意：Automatically Start MySQL Server On Startup是默认勾选的，勾选后打开电脑会默认开启MySQL，建议不需要的可以不用默认勾选。至于这里为什么独立安装一个相对新版的MySQL 5.7.21，当然是为了体验新版本所带来的新技术和新特性了。这里想尝鲜或者想当第一个吃螃蟹的小伙伴，可以先看下这个友情链接： MySQL 5.7 新特性大全和未来展望 嫌终端查看数据库不方便的，可以下载Navicat Lite管理软件，管理MySQL超级方便。后面的教程会再详细介绍。 至此，利用MacOS系统内置的Apache+MySQL+PHP的独立开发环境已经安装完毕，暂告一段落了！ 下一篇：MAMP集成环境使用与Yii2框架配置]]></content>
      <tags>
        <tag>MacOS Unix Apache Php MySQL Yii2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MAMP集成环境使用与Yii2框架配置]]></title>
    <url>%2F2018%2F04%2F14%2FMAMP%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E4%B8%8EYii2%E6%A1%86%E6%9E%B6%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[三、MAMP集成环境使用与Yii2框架配置 继上章节MacOS内置的PHP开发环境（独立安装）完成之后，这里将来大招了，安装集成环境MAMP。 安装MAMP之后，你会发现，上面你所做的事情，基本上都是多余的，因为这个一装完，其它基本都不需要动了，除了稍微改改配置什么的。MAMP安装地址 安装FREE免费版的就够了 通过Preferences设置可以设置项目是用的是Apache还是Nginx，可以设置端口号，也可以设置是用PHP的版本号，然后可以将文件夹指向自己的项目，如果没有就新建一个，最后只需要点一下start即可。这样，一个完整的PHP环境就搭建好了！ （注： Nginx的还用不起来，如有熟知的，还望告知一下啊。） 参考链接：mac环境下利用MAMP配置PHPStorm 3.1 YII2简介环境好了，接下来是不是得体验用一下，这里我们结合Yii2框架，因为工作中要用到，于是乎先来简单了解一下Yii2。官网在这里： yiiframework 英文好的小伙伴，请直接阅读吧。这里我也简单附上我所查阅了解的： YII简介Yii 是一个高性能，基于组件的 PHP 框架，用于快速开发现代 Web 应用程序。 YII优点 和其他 PHP 框架类似，Yii 实现了 MVC（Model-View-Controller）设计模式并基于该模式组织代码。 Yii 的代码简洁优雅，这是 Yii 的编程哲学。它永远不会为了要迎合某个设计模式而对代码进行过度的设计。 Yii 是一个全栈框架，提供了大量久经考验，开箱即用的特性，例如：对关系型和 NoSQL 数据库都提供了查询生成器（QueryBuilders）和 ActiveRecord；RESTful API 的开发支持；多层缓存支持，等等。 Yii 非常易于扩展。你可以自定义或替换几乎任何一处核心代码。你还会受益于它坚实可靠的扩展架构，使用、再开发或再发布扩展。 高性能始终是 Yii 的首要目标之一。 Yii 版本Yii2的最新版本是 2.0.15，发布于 2018年03月20日。Yii 2.0 在 PHP 5.4.0 版本以上完全重写了 Yii，并且完全兼容 PHP 7.x。它的目的是成为一个最先进的新一代的PHP开发框架。Yii2.0不兼容1.1。2.0 版是一个完全重写的版本，采用了最新的技术和协议，包括依赖包管理器（Composer）、PHP 代码规范（PSR）、命名空间、Traits（特质）等等。 2.0 版代表了最新一代框架，是未来几年中我们的主要开发版本。所以，我们学习2.0版本。 3.2 安装YII21、使用composer安装 什么是Composer？ 由于高墙的原因，会下载很慢，所以，这里我们使用Composer中国镜像。 如何安装 Composer ? 启用本镜像服务，系统全局配置： 即将配置信息添加到 Composer 的全局配置文件 config.json 中。修改 composer 的全局配置文件（推荐方式） 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令： 1composer config -g repo.packagist composer https://packagist.phpcomposer.com 下载 Composer 安装前请务必确保已经正确安装了 PHP。打开命令行窗口并执行 php -v 查看是否正确输出版本号。 打开命令行并依次执行下列命令安装最新版本的 Composer： 1php -r &quot;copy(&apos;https://install.phpcomposer.com/installer&apos;, &apos;composer-setup.php&apos;);&quot; 1php composer-setup.php 1php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot; 执行第一条命令下载下来的 composer-setup.php 脚本将简单地检测 php.ini 中的参数设置，如果某些参数未正确设置则会给出警告；然后下载最新版本的 composer.phar 文件到当前目录。 上述 3 条命令的作用依次是： 下载安装脚本 － composer-setup.php － 到当前目录。 执行安装过程。 删除安装脚本。 这里推荐使用全局安装： 命令：sudo mv composer.phar /usr/local/bin/composer 然后，重新打开一个命令行窗口试一试执行 composer --version 看看是否正确输出版本号。 最后，提示：不要忘了经常执行 composer selfupdate 以保持 Composer 一直是最新版本哦！ 2、安装composer-asset-plugin插件 局部安装： 1php composer.phar global require &quot;fxp/composer-asset-plugin:~1.2.0&quot; 如果你的Composer是全局安装的，那么就不需要输入php composer.phar，只需要用composer命令即可。 1composer global require &quot;fxp/composer-asset-plugin:~1.2.0&quot; 安装这个，不然你会发现新增加好的项目中没有vendor目录 3、下载yii 局部安装： 1php composer.phar create-project --prefer-dist yiisoft/yii2-app-advanced advanced 全局安装方法： 1composer create-project --prefer-dist yiisoft/yii2-app-advanced advanced 2.0.15 请注意，您可能会被提示安装过程中输入你的 GitHub 的用户名和密码。这是正常的。需要授权拉取的，只要输入它们并继续。 参考链接：Yii 中文网下载 教程： YII2快速学习笔记 在安装composer-asset-plugin的过程中，可能是由于网络的原因（明天接着安装吧。。。）： [Composer\Downloader\TransportException] Content-Length mismatch, received 293497 bytes out of the expected 938084 一阵时间后，都不约而同地出现了红色异常提示： [Composer\Downloader\TransportException] Content-Length mismatch, received 293497 bytes out of the expected 938084 可能是网络问题吧，第二天早上就可以顺利下载了 输入这个链接，在浏览器中打开，需要登录到自己的Github账户： https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225 使用默认钩选即可，然后点击绿色的 Generate token ! 这里一定要注意及时把这个刚生成的 access tokens 拷贝到终端命令行 Token (hidden): 处，否则，当前页面会话期一过的话或者刷新页面后，就可能再也看不到了，就得重新再创建过了。 获取到Token授权之后，复制粘贴到这里： Head to https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+zhaozhangdeMacBook-Pro.local+2018-04-12+0225 (注：点此链接去创建Token) to retrieve a token. It will be stored in “/Users/itworks/.composer/auth.json” for future use by Composer. Token (hidden): (注意这里是从Github获取到的授权Token) Token stored successfully. Package operations: 63 installs, 0 updates, 0 removals Installing yiisoft/yii2-composer (2.0.6): Downloading (100%) Installing doctrine/lexer (v1.0.1): Downloading (100%) Installing egulias/email-validator (2.1.4): Downloading (100%) 前面的操作，会因网络情况，而出现不同的等待情况，输入完Token后，请务必耐心等待！！ 4、下载好YII后，初始化操作如果你是类linux系统，切换到advanced目录执行php init命令进行初始化，如果你是windows系统，请双击advanced目录下的init.bat文件 php init 5、 服务器配置1）更改hosts文件内容 命令： sudo vim /etc/hosts 添加：127.0.0.1 yiiwork.com 2）更改apache服务器配置 MAMP配置虚拟主机 一：打开终端（Terminal）或Iterm工具，首先用命令 sudo vim /Applications/MAMP/conf/apache/httpd.conf 打开Apache的配置文件找到 #Include /Applications/MAMP/conf/apache/extra/httpd-vhosts.conf 取消注释，使配置虚拟主机的文件生效 二：打开虚拟主机配置文件： 命令：sudo vim /Applications/MAMP/conf/apache/extra/httpd-vhosts.conf 在其中加入如下配置 ​ ServerAdmin lizhaozhang@xxx.im​ DocumentRoot “/Users/itworks/advanced/frontend/web”​ ServerName yiiwork.com​ ServerAlias yiiwork.com​ ErrorLog “logs/dummy-host.example.com-error_log”​ CustomLog “logs/dummy-host.example.com-access_log” common​ ​ Options Indexes FollowSymLinks MultiViews​ AllowOverride None​ # Require all granted​ 三、修改项目目录访问权限命令： sudo chmod -R 777 /Users/itworks/advanced/ 四、更改完成后需要重启Apache服务器配置完成后打开浏览器，输入配置的本地域名：http://yiiwork.com/ 访问，成功了^_^ Note: 期间遇到的一个问题，在先把MAMP Start Servers, 会弹窗报错： Apache couldn’t be started. Please check your MAMP installation and configuration. 这是因为我们设置的MAMP的Apache的端口也是80，MySQL使用的默认端口也是3306， 我们用命令查看一下它们的端口和进程的占用情况： 1234sudo lsof -i:80 查看80端口的占用情况 ps aux | grep apache 查看进程sudo lsof -i:3306 查看3306端口的占用情况 ps aux | grep mysqld 查看MySQL进程kill -9 PID kill -9 pid &lt;==&gt; kill -s 9 pid，表示强制，尽快终止一个进程。 多半admin会用这个命令。 我们先把前面独立安装的MySQL和Apache给停了，然后再看端口的占用情况 MySQL： 直接点击Stop MySQL Server Apache：sudo apachectl stop 但依旧未能正常启动MAMP中的MySQL服务，于是就 没办法，只能去MAMP的MySQL运行日志中去寻找原因了 如果能够正常启动成功，会出现以下界面，并可以通过界面查看PHP安装环境及MySQL 因此，无论是在环境安装，还是在项目环境配置过程中，遇到问题，要学会去查看服务器和数据库的运行日志，从日志中发现问题，解决问题！！ 附MAMP的服务器软件安装目录，MAMP Logs路径：/Applications/MAMP/logs 下有 apache_error.log cloud_mamp.log mysql_error_log.err nginx_access.log nginx_error.log 环境软件路径： cd /Applications/MAMP/Library/bin 由于本人本地项目环境，采用的是 Homebrew（即Nginx+Php+MySQL）, 以及PhpStorm和Git版本管理，因此，这里就不再对MAMP环境过多深入的篇幅，感兴趣的童靴，可以自行研究，或者私下交流。 下一篇： Homebrew集成环境+PhpStorm与Yii2的最佳实践]]></content>
      <tags>
        <tag>MacOS Unix MAMP Yii2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacOS使用背景前言]]></title>
    <url>%2F2018%2F04%2F13%2FMacOS%E4%BD%BF%E7%94%A8%E8%83%8C%E6%99%AF%E5%89%8D%E8%A8%80%2F</url>
    <content type="text"><![CDATA[MacOS下PHP开发环境的搭建MacOS：macOS High Sierra 版本10.13.4(17E199) Apache：Server version: Apache/2.4.29 (Unix) Nginx: nginx version: nginx/1.13.10 PHP：PHP 7.1.14 (cli) (built: Feb 7 2018 18:33:30) ( NTS ) 一、MacOS使用背景前言 距自己再次使用Mac电脑，已经过去整整一年半了，说来不免都有些生疏了。对于很多习惯了基于Win PC学习办公、或者高度依赖于相对单一的高级IDE的程序猿（媛）们，如前端、手机端（Android/IOS）等，可能鲜有机会或需要去全面接触众多工具软件或者CLI（command-line interface，命令行界面）。本人之前更多的也是手机端的工作经验，想当时刚接触MacOS时，也是会有短暂的不适，但对于新鲜而又好用的新工具，作为程序猿（媛）的我们，没理由去排斥它，而应该是挑战自己的舒适区，以最快的速度擅加使用它们。 限于文章的篇幅，以及本文的侧重是如何在Mac下搭建PHP的开发环境，所以这里就不一一介绍MacOS系统及其使用了。对于Mac小白用户，请移步这里： 从Win PC到Mac 和 Mac 电脑小白应该了解哪些东西 。相信拥有上佳学习能力的你们，会很快熟悉并打造自己喜欢的Style，你们会喜欢上它的。 对于刚准备上手MacOSX的童靴，当你刚拿到公司给你配置的MackBookPro后，你新建的第一个用户，一般是管理员用户。而管理员用户是拥有较高的权限的，在我们使用CLI玩转各种命令的时候，不可避免地要涉及到用户（User）和用户组（Group），以及对应的各权限问题。为保证能够在相对安全的情况下，对系统进行一些比较安全的命令操作，这里建议除了系统管理员用户外，再新建一个普通成员用户。 详细请看这里： MacBook Pro用户与群组如何设置 这类用户能登录系统，但只能操作自己家目录的内容，权限有限，这类用户都是系统管理员自行添加的。举一个「血淋淋的例子」：本人刚拿到这个本子时，就一股劲的装PHP开发环境啊，配置项目运行权限啊等，正在用有限的生命，在做无限的权限斗争时，可能是由于不小心改了用户id或是群组，结果导致出现了这个足以令人崩溃的问题 ： 而后在尝试想恢复出厂设置或重装系统的时候，又出现了： 重启多次后发现也救不了我的本子，本「宝宝」的心情很不美丽： 至于是怎么满血复活的，重装系统啊，对于MacOSX系统遇到类似的问题是如何重装系统的，感兴趣的小伙伴且听我下回分解，在此先不做详述了。 “Unix系统通过进程的有效用户ID和有效用户组ID来决定进程对系统资源的访问权限。” 而我可能是在系统管理员权限下，修改了系统管理员的用户id或是群组，当然也包括对有些命令不够熟悉的情况下的操作，这本身就是个高风险的，可能会带来包括文件路径及权限等一系列问题。就好比如你一直用一个手机号在各大网络平台注册用户，突然哪天你把手机号换了，那各大平台就不能再给你提供理想的服务了，比如短信校验等。因此建议对Linux命令操作感兴趣的小伙伴，如安装 Virtual Box或者VMWare 搭建个Linux环境慢慢去玩去折腾，等搞清楚各个命令行的用处后，在自己的本子上，或者以后在生产环境中使用就相对安全了。当然在生产环境上的操作，不懂最好联系运维或管理员，不要自己瞎折腾，不然就会出事故的。这里对Linux感兴趣，想系统修炼的童鞋可以看看： linux常用基本命令 （PS：满足短期内工作和学习要求）鸟哥官网（简体中文） linux用户和用户组管理(添加、删除、修改)及说明 用户管理 之 用户（User）和用户组（Group）配置文件详解 Unix和Linux以及其它类Unix系统正是通过这样的用户及权限管理机制，来保障多用户操作系统管理更为方便、安全和稳定。 本系列教程将遵循在保证干货量的同时，由浅入深，由易至难的梯度以及适度地拓展延升，并坚持有图有真相的实践结果为证，以期能够满足不同经验和技术背景的童靴，不同的求知需求。为了保持轻松愉悦的学习兴头，先来张有点违和感和年代感的「小黄图」，缓解一下严肃的氛围： （PS: 想我年轻的时候，也在好奇地围观，逃～） 下一篇：MacOS内置的PHP开发环境（独立安装）]]></content>
      <tags>
        <tag>MacOS Unix Mac系统重装 用户、群组与权限</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员的第一个网站]]></title>
    <url>%2F2018%2F03%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to IT Dream Works! This is your very first post. Check documentation for more info. If you get any problems when using IT Dream Works, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ itdreamworks new "My New Post" More info: Writing Run server1$ itdreamworks server More info: Server Generate static files1$ itdreamworks generate More info: Generating Deploy to remote sites1$ itdreamworks deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[test_my_site]]></title>
    <url>%2F2018%2F02%2F08%2Ftest-my-site%2F</url>
    <content type="text"></content>
  </entry>
</search>
